package main
//一.并发相关
//a fmt应在lock与unlock之间
//b
//c
//d 实现对1000000内所有素数的列举
import (
	"fmt"
	"time"
)

func main() {

	start := time.Now().Unix()
	for num := 1; num <= 100000; num++ {
		//判断num是不是素数
		for i := 2; i < num; i++ {
			if num % i == 0 {//说明该num不是素数
				break
			}
		}
	}
	end := time.Now().Unix()
	fmt.Println("普通的方法耗时=", end - start)
}
//作者 cui_yonghua 网页：CSND

//二：编码能力题
/*var N:= 3
var M:= 3

第一层
0号房间，有楼梯通往上层，指示牌上的数字是2
1号房间，无楼梯通往上层，指示牌上的数字是3
2号房间，有楼梯通往上层，指示牌上的数字是4
第二层
0号房间，无楼梯通往上层，指示牌上的数字是1
1号房间，有楼梯通往上层，指示牌上的数字是5
2号房间，有楼梯通往上层，指示牌上的数字是2
第三层
0号房间，有楼梯通往上层，指示牌上的数字是1
1号房间，有楼梯通往上层，指示牌上的数字是2
2号房间，无楼梯通往上层，指示牌上的数字是3

(假设我从第2间房子进入)
(那么输出的数组为)
3 3
0 4
0 2
0 1
则密码为4＋2＋1=7*/
//三.业务题



